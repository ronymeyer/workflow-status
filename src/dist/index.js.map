{"version":3,"sources":["index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,oCAAsC;AACtC,wCAA0C;AAC1C,iCAOiB;AAGjB,SAAe,GAAG;;mCAAI,OAAO;;;;;;oBAEnB,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;oBACjD,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;oBACvD,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;oBACjC,KAAK,GAAG,wBAAgB,CAAC,OAAO,CAAC,CAAC;oBAClC,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;oBACtC,QAAQ,GAAG,wBAAgB,CAAC,MAAM,CAAC,CAAC;oBACxC,IAAI,QAAQ,KAAK,SAAS,EAAE;wBAC1B,QAAQ,GAAG,qBAAa,EAAE,CAAC;qBAC5B;oBAEK,KAAgB,uBAAe,CAAC,QAAQ,CAAC,EAAxC,KAAK,QAAA,EAAE,IAAI,QAAA,CAA8B;oBAEhD,IAAI,CAAC,IAAI,CAAC,wBAAsB,QAAQ,cAAS,QAAQ,SAAI,MAAQ,CAAC,CAAC;oBAEjE,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;oBAErC,MAAM,GAAkB,IAAI,CAAC;oBAC7B,UAAU,GAAkB,IAAI,CAAC;oBAEtB,qBAAM,OAAO,CAAC,IAAI,CAAC,OAAO;6BACtC,gBAAgB,CAAC;4BAChB,KAAK,OAAA;4BACL,IAAI,MAAA;4BACJ,WAAW,EAAE,QAAQ;4BACrB,MAAM,QAAA;4BACN,KAAK,OAAA;4BACL,QAAQ,EAAE,CAAC;yBACd,CAAC,EAAA;;oBARI,MAAM,GAAG,SAQb;oBAEF,IAAI,CAAC,IAAI,CAAC,0BAAwB,MAAM,CAAC,MAAM,6BAAwB,MAAM,CAAC,IAAI,CAAC,WAAa,CAAC,CAAC;oBAE5F,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,OAAO,CAAC,KAAK,WAAW,EAAxB,CAAwB,CAAC,CAAA;oBAE3E,MAAM,eAAG,KAAK,0CAAE,MAAM,uCAAI,IAAI,EAAA,CAAC;oBAC/B,UAAU,eAAG,KAAK,0CAAE,UAAU,uCAAI,IAAI,EAAA,CAAC;oBAEvC,6CAA6C;oBAC7C,IAAI,MAAM,KAAK,IAAI,EAAE;wBACnB,IAAI,CAAC,IAAI,CAAC,aAAW,MAAQ,CAAC,CAAC;wBAC/B,IAAI,CAAC,IAAI,CAAC,iBAAe,UAAY,CAAC,CAAC;wBAEvC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;wBACjC,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;qBAC1C;yBAAM;wBACL,kBAAU,CAAC,yBAAyB,CAAC,CAAC;qBACvC;;;;oBAED,IAAI,CAAC,SAAS,CAAC,wBAAsB,IAAI,CAAC,CAAC;;;;;;CAE9C;AAED,GAAG,EAAE,CAAC","file":"index.js","sourcesContent":["import * as core from '@actions/core';\r\nimport * as github from '@actions/github';\r\nimport {\r\n  getFirst,\r\n  getOptionalInput,\r\n  getOwnerAndRepo,\r\n  getRepository,\r\n  logWarning,\r\n  waitTime\r\n} from './utils';\r\n\r\n\r\nasync function run(): Promise<void> {\r\n  try {\r\n    const token = core.getInput('token', {required: true});\r\n    const workflow = core.getInput('workflow', {required: true});\r\n    const branch = core.getInput('branch');\r\n    const event = getOptionalInput('event');\r\n    const wait = core.getBooleanInput('wait');\r\n    let fullRepo = getOptionalInput('repo');\r\n    if (fullRepo === undefined) {\r\n      fullRepo = getRepository();\r\n    }\r\n\r\n    const [owner, repo] = getOwnerAndRepo(fullRepo);\r\n\r\n    core.info(`Checking result of ${workflow} from ${fullRepo}:${branch}`);\r\n\r\n    const octokit = github.getOctokit(token);\r\n\r\n    let status: string | null = null;\r\n    let conclusion: string | null = null;\r\n\r\n    const result = await octokit.rest.actions\r\n      .listWorkflowRuns({\r\n        owner,\r\n        repo,\r\n        workflow_id: workflow,\r\n        branch,\r\n        event,\r\n        per_page: 1\r\n    });\r\n\r\n    core.info(`Received status code ${result.status}, number or results: ${result.data.total_count}`);\r\n\r\n    const first = result.data.workflow_runs.find(e => typeof e !== 'undefined')\r\n\r\n    status = first?.status ?? null;\r\n    conclusion = first?.conclusion ?? null;\r\n\r\n    // conclusion is null when run is in progress\r\n    if (status !== null) {\r\n      core.info(`status: ${status}`);\r\n      core.info(`conclusion: ${conclusion}`);\r\n\r\n      core.setOutput('status', status);\r\n      core.setOutput('conclusion', conclusion);\r\n    } else {\r\n      logWarning('Workflow run is missing');\r\n    }\r\n  } catch (ex) {\r\n    core.setFailed(`Failed with error: ${ex}`);\r\n  }\r\n}\r\n\r\nrun();\r\n"]}