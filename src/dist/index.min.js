"use strict";var __awaiter=this&&this.__awaiter||function(t,i,s,c){return new(s=s||Promise)(function(e,n){function o(t){try{u(c.next(t))}catch(t){n(t)}}function r(t){try{u(c.throw(t))}catch(t){n(t)}}function u(t){t.done?e(t.value):function(e){return e instanceof s?e:new s(function(t){t(e)})}(t.value).then(o,r)}u((c=c.apply(t,i||[])).next())})},__generator=this&&this.__generator||function(n,o){var r,u,i,t,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return t={next:e(0),throw:e(1),return:e(2)},"function"==typeof Symbol&&(t[Symbol.iterator]=function(){return this}),t;function e(e){return function(t){return function(e){if(r)throw new TypeError("Generator is already executing.");for(;s;)try{if(r=1,u&&(i=2&e[0]?u.return:e[0]?u.throw||((i=u.return)&&i.call(u),0):u.next)&&!(i=i.call(u,e[1])).done)return i;switch(u=0,i&&(e=[2&e[0],i.value]),e[0]){case 0:case 1:i=e;break;case 4:return s.label++,{value:e[1],done:!1};case 5:s.label++,u=e[1],e=[0];continue;case 7:e=s.ops.pop(),s.trys.pop();continue;default:if(!(i=0<(i=s.trys).length&&i[i.length-1])&&(6===e[0]||2===e[0])){s=0;continue}if(3===e[0]&&(!i||e[1]>i[0]&&e[1]<i[3])){s.label=e[1];break}if(6===e[0]&&s.label<i[1]){s.label=i[1],i=e;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(e);break}i[2]&&s.ops.pop(),s.trys.pop();continue}e=o.call(n,s)}catch(t){e=[6,t],u=0}finally{r=i=0}if(5&e[0])throw e[1];return{value:e[0]?e[1]:void 0,done:!0}}([e,t])}}};exports.__esModule=!0;var core=require("@actions/core"),github=require("@actions/github"),utils_1=require("./utils");function run(){return __awaiter(this,void 0,Promise,function(){var e,n,o,r,u,i,s,c,a,l,f,p,h,w,_,g;return __generator(this,function(t){switch(t.label){case 0:return t.trys.push([0,2,,3]),e=core.getInput("token",{required:!0}),n=core.getInput("workflow",{required:!0}),o=core.getInput("branch"),r=utils_1.getOptionalInput("event"),core.getBooleanInput("wait"),void 0===(u=utils_1.getOptionalInput("repo"))&&(u=utils_1.getRepository()),i=utils_1.getOwnerAndRepo(u),s=i[0],c=i[1],core.info("Checking result of "+n+" from "+u+":"+o),a=github.getOctokit(e),f=l=null,[4,a.rest.actions.listWorkflowRuns({owner:s,repo:c,workflow_id:n,branch:o,event:r,per_page:1})];case 1:for(p=t.sent(),core.info("Received status code "+p.status+", number or results: "+p.data.total_count),p.data.workflow_runs.slice(0,1).forEach(function(t){core.info("status loop1: "+t.status),core.info("conclusion loop1: "+t.conclusion)}),h=0,w=p.data.workflow_runs;h<w.length;h++)_=w[h],l=_.status,f=_.conclusion,core.info("status loop: "+l),core.info("conclusion loop: "+f);return null!==l&&null!==f?(core.info("status: "+l),core.info("conclusion: "+f),core.setOutput("status",l),core.setOutput("conclusion",f)):utils_1.logWarning("Workflow run is missing"),[3,3];case 2:return g=t.sent(),core.setFailed("Failed with error: "+g),[3,3];case 3:return[2]}})})}run();
//# sourceMappingURL=index.min.js.map
