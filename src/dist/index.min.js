"use strict";var __awaiter=this&&this.__awaiter||function(e,i,l,a){return new(l=l||Promise)(function(t,n){function r(e){try{u(a.next(e))}catch(e){n(e)}}function o(e){try{u(a.throw(e))}catch(e){n(e)}}function u(e){e.done?t(e.value):function(t){return t instanceof l?t:new l(function(e){e(t)})}(e.value).then(r,o)}u((a=a.apply(e,i||[])).next())})},__generator=this&&this.__generator||function(n,r){var o,u,i,e,l={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return e={next:t(0),throw:t(1),return:t(2)},"function"==typeof Symbol&&(e[Symbol.iterator]=function(){return this}),e;function t(t){return function(e){return function(t){if(o)throw new TypeError("Generator is already executing.");for(;l;)try{if(o=1,u&&(i=2&t[0]?u.return:t[0]?u.throw||((i=u.return)&&i.call(u),0):u.next)&&!(i=i.call(u,t[1])).done)return i;switch(u=0,i&&(t=[2&t[0],i.value]),t[0]){case 0:case 1:i=t;break;case 4:return l.label++,{value:t[1],done:!1};case 5:l.label++,u=t[1],t=[0];continue;case 7:t=l.ops.pop(),l.trys.pop();continue;default:if(!(i=0<(i=l.trys).length&&i[i.length-1])&&(6===t[0]||2===t[0])){l=0;continue}if(3===t[0]&&(!i||t[1]>i[0]&&t[1]<i[3])){l.label=t[1];break}if(6===t[0]&&l.label<i[1]){l.label=i[1],i=t;break}if(i&&l.label<i[2]){l.label=i[2],l.ops.push(t);break}i[2]&&l.ops.pop(),l.trys.pop();continue}t=r.call(n,l)}catch(e){t=[6,e],u=0}finally{o=i=0}if(5&t[0])throw t[1];return{value:t[0]?t[1]:void 0,done:!0}}([t,e])}}};exports.__esModule=!0;var core=require("@actions/core"),github=require("@actions/github"),utils_1=require("./utils");function run(){var _,b,d,v;return __awaiter(this,void 0,Promise,function(){var t,n,r,o,u,i,l,a,s,c,f,p,h,w,g;return __generator(this,function(e){switch(e.label){case 0:e.trys.push([0,6,,7]),t=core.getInput("token",{required:!0}),n=core.getInput("workflow",{required:!0}),r=core.getInput("branch"),o=utils_1.getOptionalInput("event"),u=core.getBooleanInput("wait"),void 0===(i=utils_1.getOptionalInput("repo"))&&(i=utils_1.getRepository()),l=utils_1.getOwnerAndRepo(i),a=l[0],s=l[1],core.info("Checking result of "+n+" from "+i+":"+r),c=github.getOctokit(t),p=f=null,e.label=1;case 1:return[4,c.rest.actions.listWorkflowRuns({owner:a,repo:s,workflow_id:n,branch:r,event:o,per_page:1})];case 2:return h=e.sent().data.workflow_runs,w=utils_1.getFirst(h),b=null===(_=w)||void 0===_?void 0:_.status,f=null!=b?b:null,v=null===(d=w)||void 0===d?void 0:d.conclusion,p=null!=v?v:null,u&&"completed"!==f?[4,utils_1.waitTime(5e3)]:[3,4];case 3:return e.sent(),[3,4];case 4:0,e.label=5;case 5:return null!==f&&null!==p?(core.info("status: "+f),core.info("conclusion: "+p),core.setOutput("status",f),core.setOutput("conclusion",p)):utils_1.logWarning("Workflow run is missing"),[3,7];case 6:return g=e.sent(),core.setFailed("Failed with error: "+g.message),[3,7];case 7:return[2]}})})}run();
//# sourceMappingURL=index.min.js.map
